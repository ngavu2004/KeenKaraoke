/*! For license information please see tsparticles.shape.cog.min.js.LICENSE.txt */
!function(e,o){if("object"==typeof exports&&"object"==typeof module)module.exports=o(require("@tsparticles/engine"));else if("function"==typeof define&&define.amd)define(["@tsparticles/engine"],o);else{var t="object"==typeof exports?o(require("@tsparticles/engine")):o(e.window);for(var n in t)("object"==typeof exports?exports:e)[n]=t[n]}}(this,(e=>(()=>{var o={303:o=>{o.exports=e}},t={};function n(e){var r=t[e];if(void 0!==r)return r.exports;var a=t[e]={exports:{}};return o[e](a,a.exports,n),a.exports}n.d=(e,o)=>{for(var t in o)n.o(o,t)&&!n.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:o[t]})},n.o=(e,o)=>Object.prototype.hasOwnProperty.call(e,o),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};n.r(r),n.d(r,{loadCogShape:()=>u});var a=n(303);const i=2*Math.PI,c=0,s=0;class p{constructor(){this.validTypes=["cog"]}afterDraw(e){!function(e){const{context:o,particle:t,radius:n}=e;if(void 0===t.cogHoleRadius||void 0===t.cogInnerRadius||void 0===t.cogInnerTaper||void 0===t.cogNotches||void 0===t.cogOuterTaper)return;const r=n*t.cogHoleRadius/a.percentDenominator;o.globalCompositeOperation="destination-out",o.beginPath(),o.moveTo(r,s),o.arc(c,s,r,0,i),o.closePath(),o.fill(),o.globalCompositeOperation="source-over"}(e)}draw(e){!function(e){const{context:o,particle:t,radius:n}=e;if(void 0===t.cogHoleRadius||void 0===t.cogInnerRadius||void 0===t.cogInnerTaper||void 0===t.cogNotches||void 0===t.cogOuterTaper)return;const r=i/(2*t.cogNotches),c=r*t.cogInnerTaper*.005,s=r*t.cogOuterTaper*.005,p=n*t.cogInnerRadius/a.percentDenominator;let u=r,d=!1;for(o.moveTo(n*Math.cos(s),n*Math.sin(s));u<=i;u+=r)d?(o.lineTo(p*Math.cos(u-c),p*Math.sin(u-c)),o.lineTo(n*Math.cos(u+s),n*Math.sin(u+s))):(o.lineTo(n*Math.cos(u-s),n*Math.sin(u-s)),o.lineTo(p*Math.cos(u+c),p*Math.sin(u+c))),d=!d}(e)}particleInit(e,o){const t=o.shapeData;o.cogHoleRadius=(0,a.getRangeValue)(t?.holeRadius??44),o.cogInnerRadius=(0,a.getRangeValue)(t?.innerRadius??72),o.cogInnerTaper=(0,a.getRangeValue)(t?.innerTaper??35),o.cogNotches=(0,a.getRangeValue)(t?.notches??7),o.cogOuterTaper=(0,a.getRangeValue)(t?.outerTaper??50)}}async function u(e,o=!0){await e.addShape(new p,o)}return r})()));