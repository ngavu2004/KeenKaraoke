/*! For license information please see tsparticles.effect.trail.min.js.LICENSE.txt */
!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e(require("@tsparticles/engine"));else if("function"==typeof define&&define.amd)define(["@tsparticles/engine"],e);else{var a="object"==typeof exports?e(require("@tsparticles/engine")):e(t.window);for(var i in a)("object"==typeof exports?exports:t)[i]=a[i]}}(this,(t=>(()=>{var e={303:e=>{e.exports=t}},a={};function i(t){var r=a[t];if(void 0!==r)return r.exports;var o=a[t]={exports:{}};return e[t](o,o.exports,i),o.exports}i.d=(t,e)=>{for(var a in e)i.o(e,a)&&!i.o(t,a)&&Object.defineProperty(t,a,{enumerable:!0,get:e[a]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),i.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var r={};i.r(r),i.d(r,{loadTrailEffect:()=>d});var o=i(303);const n=.5,l=0,s=0,f={a:1,b:0,c:0,d:1};class c{draw(t){const{context:e,radius:a,particle:i,transformData:r}=t,o=2*a,c=i.container.retina.pixelRatio,d=i.getPosition(),p=i.trail;if(!p||!i.trailLength)return;const h=i.trailLength+a;if(p.push({color:e.fillStyle??e.strokeStyle,position:{x:d.x,y:d.y},transformData:{...t.transformData}}),p.length<2)return;for(;p.length>h;)p.shift();const x=Math.min(p.length,h),y=i.container.canvas.size.width+o,g=i.container.canvas.size.height+o;let u=p[x-1].position;for(let t=x;t>0;t--){const a=p[t-1],r=a.position,d=i.trailTransform?a.transformData??f:f;e.setTransform(d.a,d.b,d.c,d.d,r.x,r.y),e.beginPath(),e.moveTo(u.x-r.x,u.y-r.y);const h={x:(u.x+y)%y,y:(u.y+g)%g};if(Math.abs(u.x-r.x)>y*n||Math.abs(u.y-r.y)>g*n){u=r;continue}e.lineTo(Math.abs(u.x-r.x)>y*n?h.x:l,Math.abs(u.y-r.y)>g*n?h.y:s);const m=Math.max(t/x*o,c,i.trailMinWidth??-1),b=e.globalAlpha;e.globalAlpha=i.trailFade?t/x:1,e.lineWidth=i.trailMaxWidth?Math.min(m,i.trailMaxWidth):m,e.strokeStyle=a.color,e.stroke(),e.globalAlpha=b,u=r}e.setTransform(r.a,r.b,r.c,r.d,d.x,d.y)}particleInit(t,e){e.trail=[];const a=e.effectData;e.trailFade=a?.fade??!0,e.trailLength=(0,o.getRangeValue)(a?.length??10)*t.retina.pixelRatio,e.trailMaxWidth=a?.maxWidth?(0,o.getRangeValue)(a.maxWidth)*t.retina.pixelRatio:void 0,e.trailMinWidth=a?.minWidth?(0,o.getRangeValue)(a.minWidth)*t.retina.pixelRatio:void 0,e.trailTransform=a?.transform??!1}}async function d(t,e=!0){await t.addEffect("trail",new c,e)}return r})()));