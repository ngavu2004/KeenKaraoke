/*! For license information please see tsparticles.plugin.hsvColor.min.js.LICENSE.txt */
!function(e,r){if("object"==typeof exports&&"object"==typeof module)module.exports=r(require("@tsparticles/engine"));else if("function"==typeof define&&define.amd)define(["@tsparticles/engine"],r);else{var t="object"==typeof exports?r(require("@tsparticles/engine")):r(e.window);for(var o in t)("object"==typeof exports?exports:e)[o]=t[o]}}(this,(e=>(()=>{var r={303:r=>{r.exports=e}},t={};function o(e){var n=t[e];if(void 0!==n)return n.exports;var s=t[e]={exports:{}};return r[e](s,s.exports,o),s.exports}o.d=(e,r)=>{for(var t in r)o.o(r,t)&&!o.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},o.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};o.r(n),o.d(n,{loadHsvColorPlugin:()=>v});var s=o(303);const a=255;function i(e){const r={b:0,g:0,r:0},t=e.h/60,o=e.s/s.percentDenominator,n=e.v/s.percentDenominator,i=n*o,l=i*(1-Math.abs(t%2-1));let v;if(t>=0&&t<=1?v={r:i,g:l,b:0}:t>1&&t<=2?v={r:l,g:i,b:0}:t>2&&t<=3?v={r:0,g:i,b:l}:t>3&&t<=4?v={r:0,g:l,b:i}:t>4&&t<=5?v={r:l,g:0,b:i}:t>5&&t<=6&&(v={r:i,g:0,b:l}),v){const e=n-i;r.r=Math.floor((v.r+e)*a),r.g=Math.floor((v.g+e)*a),r.b=Math.floor((v.b+e)*a)}return r}class l{constructor(){this.key="hsv",this.stringPrefix="hsv"}handleColor(e){const r=e.value.hsv??e.value;if(void 0!==r.h&&void 0!==r.v)return i(r)}handleRangeColor(e){const r=e.value.hsv??e.value;if(void 0!==r.h&&void 0!==r.v)return i({h:(0,s.getRangeValue)(r.h),s:(0,s.getRangeValue)(r.s),v:(0,s.getRangeValue)(r.v)})}parseString(e){if(!e.startsWith("hsv"))return;const r=/hsva?\(\s*(\d+)Â°\s*,\s*(\d+)%\s*,\s*(\d+)%\s*(,\s*([\d.%]+)\s*)?\)/i.exec(e),t=1,o=2,n=3,a=5;return r?{a:(l={a:r.length>4?(0,s.parseAlpha)(r[a]):1,h:parseInt(r[t],10),s:parseInt(r[o],10),v:parseInt(r[n],10)}).a,...i(l)}:void 0;var l}}function v(){return(0,s.addColorManager)(new l),Promise.resolve()}return n})()));