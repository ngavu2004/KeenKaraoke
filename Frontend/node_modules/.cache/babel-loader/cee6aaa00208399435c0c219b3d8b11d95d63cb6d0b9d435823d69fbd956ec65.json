{"ast":null,"code":"var _jsxFileName = \"/Users/manyamehta/Desktop/keenkaraoke/KeenKaraoke/Frontend/src/components/config/particles.js\",\n  _s = $RefreshSig$();\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { loadSlim } from \"@tsparticles/slim\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticlesComponent = props => {\n  _s();\n  const [init, setInit] = useState(false);\n  useEffect(() => {\n    initParticlesEngine(async engine => {\n      await loadSlim(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, []);\n  const particlesLoaded = container => {\n    console.log(container);\n  };\n  const options = useMemo(() => ({\n    background: {\n      color: {\n        value: \"#000000\" // Dark background color\n      }\n    },\n    fpsLimit: 120,\n    interactivity: {\n      events: {\n        onClick: {\n          enable: true,\n          mode: \"push\" // Change interaction mode\n        },\n        onHover: {\n          enable: true,\n          mode: 'repulse'\n        }\n      },\n      modes: {\n        push: {\n          quantity: 4 // Number of particles to push on click\n        },\n        repulse: {\n          distance: 100,\n          duration: 0.4\n        }\n      }\n    },\n    particles: {\n      color: {\n        value: \"#FF69B4\" // Heart-themed color\n      },\n      links: {\n        color: \"#FF69B4\",\n        // Link color to match heart theme\n        distance: 150,\n        enable: true,\n        opacity: 0.5,\n        width: 2\n      },\n      move: {\n        direction: \"none\",\n        enable: true,\n        outModes: {\n          default: \"bounce\"\n        },\n        random: true,\n        speed: 2,\n        // Increased speed for a more dynamic effect\n        straight: false\n      },\n      number: {\n        density: {\n          enable: true,\n          area: 800 // Adjusted density for more particles\n        },\n        value: 150\n      },\n      opacity: {\n        value: 0.5 // Adjust opacity for a softer look\n      },\n      shape: {\n        type: [\"circle\", \"heart\"] // Use both circles and heart shapes\n      },\n      size: {\n        value: {\n          min: 5,\n          max: 10\n        } // Increased size for better visibility\n      }\n    },\n    detectRetina: true\n  }), []);\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: props.id,\n    init: particlesLoaded,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 12\n  }, this);\n};\n_s(ParticlesComponent, \"eB+NWpxmGZSqHQDaTSx/Qv0E/5M=\");\n_c = ParticlesComponent;\nexport default ParticlesComponent;\nvar _c;\n$RefreshReg$(_c, \"ParticlesComponent\");","map":{"version":3,"names":["Particles","initParticlesEngine","useEffect","useMemo","useState","loadSlim","jsxDEV","_jsxDEV","ParticlesComponent","props","_s","init","setInit","engine","then","particlesLoaded","container","console","log","options","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","modes","push","quantity","repulse","distance","duration","particles","links","opacity","width","move","direction","outModes","default","random","speed","straight","number","density","area","shape","type","size","min","max","detectRetina","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/manyamehta/Desktop/keenkaraoke/KeenKaraoke/Frontend/src/components/config/particles.js"],"sourcesContent":["import Particles, { initParticlesEngine } from \"@tsparticles/react\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { loadSlim } from \"@tsparticles/slim\";\n\nconst ParticlesComponent = (props) => {\n    const [init, setInit] = useState(false);\n\n    useEffect(() => {\n        initParticlesEngine(async (engine) => {\n            await loadSlim(engine);\n        }).then(() => {\n            setInit(true);\n        });\n    }, []);\n\n    const particlesLoaded = (container) => {\n        console.log(container);\n    };\n\n    const options = useMemo(\n        () => ({\n            background: {\n                color: {\n                    value: \"#000000\", // Dark background color\n                },\n            },\n            fpsLimit: 120,\n            interactivity: {\n                events: {\n                    onClick: {\n                        enable: true,\n                        mode: \"push\", // Change interaction mode\n                    },\n                    onHover: {\n                        enable: true,\n                        mode: 'repulse',\n                    },\n                },\n                modes: {\n                    push: {\n                        quantity: 4, // Number of particles to push on click\n                    },\n                    repulse: {\n                        distance: 100,\n                        duration: 0.4,\n                    },\n                },\n            },\n            particles: {\n                color: {\n                    value: \"#FF69B4\", // Heart-themed color\n                },\n                links: {\n                    color: \"#FF69B4\", // Link color to match heart theme\n                    distance: 150,\n                    enable: true,\n                    opacity: 0.5,\n                    width: 2,\n                },\n                move: {\n                    direction: \"none\",\n                    enable: true,\n                    outModes: {\n                        default: \"bounce\",\n                    },\n                    random: true,\n                    speed: 2, // Increased speed for a more dynamic effect\n                    straight: false,\n                },\n                number: {\n                    density: {\n                        enable: true,\n                        area: 800, // Adjusted density for more particles\n                    },\n                    value: 150,\n                },\n                opacity: {\n                    value: 0.5, // Adjust opacity for a softer look\n                },\n                shape: {\n                    type: [\"circle\", \"heart\"], // Use both circles and heart shapes\n                },\n                size: {\n                    value: { min: 5, max: 10 }, // Increased size for better visibility\n                },\n            },\n            detectRetina: true,\n        }),\n        [],\n    );\n\n    return <Particles id={props.id} init={particlesLoaded} options={options} />;\n};\n\nexport default ParticlesComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}